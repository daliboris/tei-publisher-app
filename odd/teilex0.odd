<?xml-model href="teipublisher_odds.xsd"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>TEI Lex-0 (DARIAH)
                    <desc>Default structure for monolingual dictionary with inline sense, i.e. entry in one paragraph, and with basic formatting (bold, italic, strikethrough).</desc>
                </title>
            </titleStmt>
            <publicationStmt>
                <publisher>DARIAH Working Group on Lexical Resources</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under
                        GNU General Public License</licence>
                    <p>Copyright 2023 <ref target="https://www.dariah.eu/activities/working-groups/lexical-resources/">DARIAH Working Group on Lexical Resources</ref></p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref></p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <tagsDecl>
                <rendition source="teilex0.css" />
            </tagsDecl>
        </encodingDesc>
        <revisionDesc>
            <change when="2023-05-02+02:00">Initial version</change>
        </revisionDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="teilex0" source="teipublisher.odd">
                <!-- Elements from teiHeader -->
                <elementSpec ident="editionStmt" mode="change">
                    <model behaviour="block" predicate="$parameters?header='short'" />
                </elementSpec>
                <elementSpec ident="principal" mode="change">
                    <model predicate="$parameters?header='short' and (following-sibling::editor)" behaviour="inline" cssClass="lex0 principal">
                        <desc>Principal researcher of the project</desc>
                        <outputRendition xml:space="preserve" scope="after">content: ' – ';</outputRendition>
                    </model>
                    <model predicate="$parameters?header='short' and not(following-sibling::editor | following-sibling::principal)" behaviour="inline" cssClass="lex0 principal last">
                        <desc>Principal researcher of the project</desc>
                        <outputRendition xml:space="preserve" scope="after">content: ' – ';</outputRendition>
                    </model>
                    <model predicate="ancestor::teiHeader" behaviour="inline" />
                </elementSpec>
                <elementSpec ident="editor" mode="change">
                    <model predicate="$parameters?header='short' and following-sibling::editor" behaviour="inline" cssClass="lex0 editor">
                        <outputRendition xml:space="preserve" scope="after">content: ' – ';</outputRendition>
                    </model>
                    <model predicate="$parameters?header='short' and not(following-sibling::editor)" behaviour="inline" cssClass="lex0 editor last">
                        <outputRendition xml:space="preserve" scope="after">content: ' – ';</outputRendition>
                    </model>
                    <model behaviour="inline">
                        <desc>Editor of the document</desc>
                    </model>
                </elementSpec>
                <elementSpec ident="affiliation" mode="change">
                    <model predicate="$parameters?header='short'" behaviour="omit" />
                    <model predicate="not(following-sibling::affiliation)" behaviour="inline">
                        <outputRendition xml:space="preserve" scope="after">content: ', ';</outputRendition>
                    </model>
                    <model behaviour="inline">
                        <desc>Editor of the document</desc>
                    </model>
                </elementSpec>

                <elementSpec ident="entry" mode="add">
                    <model predicate="parent::sense or preceding-sibling::sense" behaviour="inline">
                        <desc>Dictionary entry that is part of the sense of another entry</desc>
                    </model>
                    <model behaviour="block" cssClass="lex0 entry">
                        <desc>Dictionary entry that is not part of another sense (separate entry or homonymic entry)</desc>
                    </model>
                </elementSpec>
                <elementSpec ident="sense" mode="add">
                    <model predicate="not(.//form) and $parameters?entry-parts='headword'" behaviour="omit" />
                    <model behaviour="inline" />
                </elementSpec>
                <elementSpec ident="quote" mode="change">
                    <model predicate="$parameters?entry-parts='headword'" behaviour="omit" />
                    <model predicate="ancestor::entry" behaviour="inline" useSourceRendition="true">
                        <desc>If it is inside an entry then it is inline and without additional quotes</desc>
                    </model>
                    <model predicate="ancestor::p" behaviour="inline" useSourceRendition="true">
                        <desc>If it is inside a paragraph then it is inline, otherwise it is block level</desc>
                        <outputRendition xml:space="preserve" scope="before">content: '‘';</outputRendition>
                        <outputRendition xml:space="preserve" scope="after">content: '’';</outputRendition>
                    </model>
                    <model behaviour="block" useSourceRendition="true">
                        <desc>If it is inside a paragraph then it is inline, otherwise it is block level</desc>
                        <outputRendition xml:space="preserve">margin-left: 10px; margin-right: 10px;</outputRendition>
                    </model>
                </elementSpec>
                <elementSpec ident="cit" mode="change">
                    <model predicate="$parameters?entry-parts='headword'" behaviour="omit" />
                    <model predicate="ancestor::sense" behaviour="inline" useSourceRendition="true">
                        <desc>If it is inside a sense then it is inline</desc>
                    </model>
                    <model predicate="child::quote and child::bibl" behaviour="cit" useSourceRendition="true">
                        <desc>Insert citation </desc>
                    </model>
                </elementSpec>
                <elementSpec ident="form" mode="add">
                    <model predicate="not(@type=('lemma', 'variant')) and $parameters?entry-parts='headword'" behaviour="omit" />
                    <model behaviour="inline" />
                </elementSpec>
                <elementSpec ident="orth" mode="add">
                    <model behaviour="inline" useSourceRendition="true" />
                </elementSpec>
                <elementSpec ident="gram" mode="add">
                    <model behaviour="inline" useSourceRendition="true" />
                </elementSpec>
                <elementSpec ident="note" mode="change">
                    <model predicate="$parameters?entry-parts='headword'" behaviour="omit" />
                    <model predicate="ancestor::entry" behaviour="inline" useSourceRendition="true">
                        <desc>Note within the entry is processed inline</desc>
                    </model>
                    <model behaviour="note">
                        <param name="place" value="@place" />
                        <param name="label" value="@n" />
                    </model>
                </elementSpec>
                <elementSpec ident="gloss" mode="add">
                    <model predicate="$parameters?entry-parts='headword'" behaviour="omit" />
                    <model behaviour="inline" useSourceRendition="true"/>
                </elementSpec>
                <elementSpec ident="lbl" mode="add">
                    <model predicate="$parameters?entry-parts='headword'" behaviour="omit" />
                    <model behaviour="inline" useSourceRendition="true"/>
                </elementSpec>
                <elementSpec ident="ref" mode="change">
                    <model predicate="$parameters?entry-parts='headword'" behaviour="omit" />
                    <model predicate="not(node())" behaviour="link" useSourceRendition="true">
                        <param name="content" value="@target" />
                        <param name="uri" value="@target" />
                    </model>
                    <model predicate="@target" behaviour="link" useSourceRendition="true">
                        <param name="uri" value="@target" />
                    </model>
                    <model behaviour="inline" useSourceRendition="true"/>
                </elementSpec>
                <elementSpec ident="def" mode="add">
                    <model predicate="$parameters?entry-parts='headword'" behaviour="omit" />
                <model behaviour="inline" useSourceRendition="true"/>
                </elementSpec>
                <elementSpec ident="usg" mode="add">
                    <model predicate="$parameters?entry-parts='headword'" behaviour="omit" />
                    <model predicate="not(node())" behaviour="omit" />
                    <model behaviour="inline" useSourceRendition="true" />
                </elementSpec>
                 <elementSpec ident="citedRange" mode="add">
                    <model predicate="$parameters?entry-parts='headword'" behaviour="omit" />
                    <model behaviour="inline" useSourceRendition="true"/>
                </elementSpec>
                <elementSpec ident="metamark" mode="add">
                    <model predicate="$parameters?entry-parts='headword'" behaviour="omit" />
                    <model behaviour="inline" useSourceRendition="true"/>
                </elementSpec>
                <elementSpec ident="pc" mode="add">
                    <model predicate="$parameters?entry-parts='headword'" behaviour="omit" />
                    <model behaviour="inline" useSourceRendition="true"/>
                </elementSpec>
                <elementSpec ident="fw" mode="change">
                    <model predicate="ancestor::p or ancestor::ab" behaviour="inline"/>
                    <model predicate="@place and following-sibling::*[1][self::fw]" behaviour="pass-through" pb:mode="fw">
                        <param name="place" value="@place"/>
                        <param name="next" value="following-sibling::*[1]"/>
                        <param name="next-place" value="following-sibling::*[1]/@place"/>
                        <pb:template>
                            <div class="lex0 fw">
                                <span class="[[place]]">[[content]]</span>
                                <span class="[[next-place]]">[[next]]</span>
                            </div>
                        </pb:template>
                    </model>
                    <model predicate="$mode='fw' and @place and preceding-sibling::*[1][self::fw]" behaviour="pass-through"/>
                    <model predicate="@place and preceding-sibling::*[1][self::fw]" behaviour="omit"/>
                    <model predicate="@place" behaviour="pass-through" pb:mode="fw">
                        <param name="place" value="@place"/>
                        <pb:template>
                            <div class="lex0 fw">
                                <span class="[[place]]">[[content]]</span>
                            </div>
                        </pb:template>
                    </model>
                    <model behaviour="block"/>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</TEI>